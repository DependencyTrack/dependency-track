on:
  workflow_call:
    inputs:
      app-version:
        type: string
        required: false
        default: "snapshot"
        description: "the version that should be set/used as tag for the container image"
      publish-container:
        type: boolean
        required: false
        default: false
        description: "publish and scan the container image once its built"
    secrets:
      registry-0-usr:
        required: true
      registry-0-psw:
        required: true

jobs:
  build-java:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3.5.3

      - name: Set up JDK
        uses: actions/setup-java@v3.11.0
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: 'maven'

      - name: Setup CycloneDX CLI
        run: |
          mkdir -p "$HOME/.local/bin"
          echo "$HOME/.local/bin" >> $GITHUB_PATH
          wget -O "$HOME/.local/bin/cyclonedx" https://github.com/CycloneDX/cyclonedx-cli/releases/download/v0.24.2/cyclonedx-linux-x64
          echo "ef0d3b31d176e02bc594f83e19cfcea053c6bc5b197351f71696e189390f851d $HOME/.local/bin/cyclonedx" | sha256sum -c
          chmod +x "$HOME/.local/bin/cyclonedx"

      - name: Build with Maven
        run: |-
          mvn clean
          mvn package -Dmaven.test.skip=true -P enhance -P embedded-jetty -Dservices.bom.merge.skip=false -Dlogback.configuration.file=src/main/docker/logback.xml
          mvn clean -P clean-exclude-wars
          mvn package -Dmaven.test.skip=true -P enhance -P embedded-jetty -P bundle-ui -Dservices.bom.merge.skip=false -Dlogback.configuration.file=src/main/docker/logback.xml
          mvn clean -P clean-exclude-wars
          mvn cyclonedx:makeBom -Dservices.bom.merge.skip=false org.codehaus.mojo:exec-maven-plugin:exec@merge-services-bom

      - name: Upload Artifacts
        uses: actions/upload-artifact@v3.1.2
        with:
          name: assembled-wars
          path: |-
            target/*.jar
            target/bom.json

  build-container:
    runs-on: ubuntu-latest
    needs:
      - build-java

    strategy:
      matrix:
        distribution:
          - apiserver
          - bundled
      fail-fast: false

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3.5.3

      - name: Download Artifacts
        uses: actions/download-artifact@v3.0.2
        with:
          name: assembled-wars
          path: target

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2.1.0

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2.6.0
        id: buildx
        with:
          install: true

      - name: Login to Docker.io
        uses: docker/login-action@v2.2.0
        if: ${{ inputs.publish-container }}
        with:
          registry: docker.io
          username: ${{ secrets.registry-0-usr }}
          password: ${{ secrets.registry-0-psw }}

      - name: Set Container Tags
        id: tags
        run: |-
          TAGS="docker.io/dependencytrack/${{ matrix.distribution }}:${{ inputs.app-version }}"
          if [[ "${{ inputs.app-version }}" != "snapshot" ]]; then
            TAGS="${TAGS},docker.io/dependencytrack/${{ matrix.distribution }}:latest"
          fi
          echo "tags=${TAGS}" >> $GITHUB_OUTPUT

      - name: Build multi-arch Container Image
        uses: docker/build-push-action@v4.1.0
        with:
          tags: ${{ steps.tags.outputs.tags }}
          build-args: |-
            APP_VERSION=${{ inputs.app-version }}
            COMMIT_SHA=${{ github.sha }}
            WAR_FILENAME=dependency-track-${{ matrix.distribution }}.jar
          platforms: linux/amd64,linux/arm64
          push: ${{ inputs.publish-container }}
          context: .
          file: src/main/docker/Dockerfile

      - name: Run Trivy Vulnerability Scanner
        if: ${{ inputs.publish-container }}
        uses: aquasecurity/trivy-action@0.11.2
        with:
          image-ref: docker.io/dependencytrack/${{ matrix.distribution }}:${{ inputs.app-version }}
          format: 'sarif'
          output: 'trivy-results.sarif'
          ignore-unfixed: true
          vuln-type: 'os'

      - name: Upload Trivy Scan Results to GitHub Security Tab
        if: ${{ inputs.publish-container }}
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: 'trivy-results.sarif'
