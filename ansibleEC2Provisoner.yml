---
- name: Provision EC2 instance with Docker and SSM Agent
  hosts: localhost
  connection: local
  gather_facts: no
  collections:
    - amazon.aws

  vars:
    aws_region: us-east-1
    instance_type: t3.small
    ami_id: ami-0360c520857e3138f
    key_name: YoussefAnsible-keypair
    pem_file: ~/.ssh/YoussefAnsible-keypair.pem
    security_group: sg-09091d64701497a2f
    subnet_id: subnet-0b4309b00435bfb03

  tasks:
    - name: Create a keypair
      amazon.aws.ec2_key:
        name: "{{ key_name }}"
        region: "{{ aws_region }}"
        state: present
      register: new_keypair

    - name: Save private key to ~/.ssh on control machine
      copy:
        content: "{{ new_keypair.key.private_key }}"
        dest: "{{ pem_file }}"
        mode: '0600'
      when: new_keypair.changed

    - name: Launch EC2 instance
      amazon.aws.ec2_instance:
        name: ansible-youssef-al2023
        key_name: "{{ key_name }}"
        instance_type: "{{ instance_type }}"
        image_id: "{{ ami_id }}"
        region: "{{ aws_region }}"
        security_group: "{{ security_group }}"
        subnet_id: "{{ subnet_id }}"
        wait: yes
        count: 1
        network:
          assign_public_ip: yes
        iam_instance_profile: "YoussefSSMrole"
      register: ec2

    - name: Save instance IP for GitHub Actions artifact
      copy:
        content: "{{ ec2.instances[0].public_ip_address }}"
        dest: "{{ playbook_dir }}/ec2_ip.txt"
      delegate_to: localhost

    - name: Show new instance IP
      debug:
        msg: "EC2 instance launched with IP {{ ec2.instances[0].public_ip_address }}"

    - name: Install dependencies
      ansible.builtin.yum:
        name: curl
        state: present
      become: yes
      hosts: all
      vars:
        ansible_host: "{{ ec2.instances[0].public_ip_address }}"
        ansible_user: ec2-user
        ansible_ssh_private_key_file: "{{ pem_file }}"

    - name: Install SSM Agent
      ansible.builtin.shell: |
        sudo yum install -y https://s3.amazonaws.com/ec2-downloads-windows/SSMAgent/latest/linux_amd64/amazon-ssm-agent.rpm
        sudo systemctl enable amazon-ssm-agent
        sudo systemctl start amazon-ssm-agent
      become: yes
      args:
        executable: /bin/bash
      hosts: all

    - name: Install Docker
      ansible.builtin.yum:
        name: docker
        state: present
      become: yes
      hosts: all

    - name: Start Docker service
      ansible.builtin.systemd:
        name: docker
        state: started
        enabled: yes
      become: yes
      hosts: all

    - name: Install Docker Compose
      ansible.builtin.shell: |
        sudo curl -SL https://github.com/docker/compose/releases/latest/download/docker-compose-linux-$(uname -m) -o /usr/libexec/docker/cli-plugins/docker-compose
        sudo chmod +x /usr/libexec/docker/cli-plugins/docker-compose
      become: yes
      args:
        executable: /bin/bash
      hosts: all
