---
- name: Create EC2 instance and keypair
  hosts: localhost
  connection: local
  gather_facts: no
  collections:
    - amazon.aws

  vars:
    aws_region: us-east-1
    instance_type: t3.small
    ami_id: ami-0360c520857e3138f
    key_name: YoussefAnsible-keypair
    pem_file: ~/.ssh/YoussefAnsible-keypair.pem
    security_group: sg-09091d64701497a2f
    subnet_id: subnet-0b4309b00435bfb03

  tasks:
    - name: Create a keypair
      amazon.aws.ec2_key:
        name: "{{ key_name }}"
        region: "{{ aws_region }}"
        state: present
      register: new_keypair

    - name: Save private key locally
      copy:
        content: "{{ new_keypair.key.private_key }}"
        dest: "{{ pem_file }}"
        mode: '0600'
      when: new_keypair.changed

    - name: Launch EC2 instance
      amazon.aws.ec2_instance:
        name: ansible-managed-ubuntu
        key_name: "{{ key_name }}"
        instance_type: "{{ instance_type }}"
        image_id: "{{ ami_id }}"
        region: "{{ aws_region }}"
        security_group: "{{ security_group }}"
        subnet_id: "{{ subnet_id }}"
        wait: yes
        count: 1
        network:
          assign_public_ip: yes
      register: ec2

    - name: Add new instance to dynamic inventory
      add_host:
        name: target-ubuntu
        ansible_host: "{{ ec2.instances[0].public_ip_address }}"
        ansible_user: ubuntu
        ansible_ssh_private_key_file: "{{ pem_file }}"

    - name: Show new instance IP
      debug:
        msg: "EC2 instance launched with IP {{ ec2.instances[0].public_ip_address }}"

    - name: Save instance IP for GitHub Actions
      copy:
        content: "{{ ec2.instances[0].public_ip_address }}"
        dest: ./ec2_ip.txt
      delegate_to: localhost


    - name: Wait for SSH to become available
      wait_for:
        host: "{{ ec2.instances[0].public_ip_address }}"
        port: 22
        delay: 30        
        timeout: 300     
        state: started

- name: Run the dependancy Front and backend
  hosts: target-ubuntu
  become: yes

  tasks:

    - name: Update apt cache
      apt:
        update_cache: yes

    - name: Install packages
      apt:
        name:
          - git
          - docker.io
          - docker-compose
        state: present

    - name: Ensure Docker service is running
      service:
        name: docker
        state: started
        enabled: yes
