version: "3"

services:
  apiserver:
    build:
      context: .
      dockerfile: ./src/main/docker/Dockerfile
    depends_on:
    - postgres
    environment:
      ALPINE_DATABASE_MODE: "external"
      ALPINE_DATABASE_URL: "jdbc:postgresql://postgres:5432/dtrack"
      ALPINE_DATABASE_USERNAME: "dtrack"
      ALPINE_DATABASE_PASSWORD: "dtrack"
    ports:
    - "127.0.0.1:8080:8080"
    volumes:
    - "apiserver-data:/data"
    restart: unless-stopped

  postgres:
    image: postgres:14.2-alpine
    environment:
      POSTGRES_DB: "dtrack"
      POSTGRES_USER: "dtrack"
      POSTGRES_PASSWORD: "dtrack"
    ports:
    - "127.0.0.1:5432:5432"
    volumes:
    - "postgres-data:/var/lib/postgresql/data"
    restart: unless-stopped

#  sqlserver:
#    image: mcr.microsoft.com/mssql/server:2019-latest
#    environment:
#      ACCEPT_EULA: "y"
#      SA_PASSWORD: "dtrack"
#    ports:
#    - "127.0.0.1:1433:1433"
#    restart: unless-stopped

  frontend:
    image: dependencytrack/frontend:snapshot
    environment:
      API_BASE_URL: "http://localhost:8080"
    ports:
    - "127.0.0.1:8081:8080"
    restart: unless-stopped

volumes:
  apiserver-data: { }
  postgres-data: { }