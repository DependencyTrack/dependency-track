/*
 * This file is part of Dependency-Track.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * SPDX-License-Identifier: Apache-2.0
 * Copyright (c) OWASP Foundation. All Rights Reserved.
 */
package org.dependencytrack.event;

import alpine.event.framework.AbstractChainableEvent;
import org.dependencytrack.model.Project;
import org.dependencytrack.model.VulnerabilityAnalysisLevel;

import java.util.UUID;

import static java.util.Objects.requireNonNull;

/**
 * @since 4.12.4
 */
public class ProjectVulnerabilityAnalysisEvent extends AbstractChainableEvent {

    private final UUID projectUuid;
    private final VulnerabilityAnalysisLevel analysisLevel;

    public ProjectVulnerabilityAnalysisEvent(
            final Project project,
            final VulnerabilityAnalysisLevel analysisLevel) {
        requireNonNull(project, "project must not be null");
        requireNonNull(project.getUuid(), "project uuid must not be null");
        requireNonNull(analysisLevel, "analysisLevel must not be null");
        this.projectUuid = project.getUuid();
        this.analysisLevel = analysisLevel;
    }

    public UUID projectUuid() {
        return projectUuid;
    }

    public VulnerabilityAnalysisLevel analysisLevel() {
        return analysisLevel;
    }

}
