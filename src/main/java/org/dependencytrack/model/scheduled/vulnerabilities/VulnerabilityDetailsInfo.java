/*
 * This file is part of Dependency-Track.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * SPDX-License-Identifier: Apache-2.0
 * Copyright (c) OWASP Foundation. All Rights Reserved.
 */
package org.dependencytrack.model.scheduled.vulnerabilities;

import java.util.Date;
import org.dependencytrack.model.Finding;
import org.dependencytrack.util.ScheduledUtil;

/* 
 * Part of the ScheduledPolicyViolationsIdentified Template Models.
 * Contains detailed information about the vulnerability/finding it represents.
 * This class helps to extract the relevant data from the Finding object, to make it easier to use in the template.
 */
public record VulnerabilityDetailsInfo(
        String componentUuid,
        String componentName,
        String componentVersion,
        String componentGroup,
        String vulnerabilitySource,
        String vulnerabilityId,
        String vulnerabilitySeverity,
        String analyzer,
        String attributionReferenceUrl,
        String attributedOn,
        String analysisState,
        Boolean suppressed) {
    public VulnerabilityDetailsInfo(Finding finding) {
        this(
                ScheduledUtil.getValueOrEmptyIfNull(finding.getComponent().get("uuid")),
                ScheduledUtil.getValueOrEmptyIfNull(finding.getComponent().get("name")),
                ScheduledUtil.getValueOrEmptyIfNull(finding.getComponent().get("version")),
                ScheduledUtil.getValueOrEmptyIfNull(finding.getComponent().get("group")),
                ScheduledUtil.getValueOrEmptyIfNull(finding.getVulnerability().get("source")),
                ScheduledUtil.getValueOrEmptyIfNull(finding.getVulnerability().get("vulnId")),
                ScheduledUtil.getValueOrEmptyIfNull(finding.getVulnerability().get("severity")),
                ScheduledUtil.getValueOrEmptyIfNull(finding.getAttribution().get("analyzerIdentity")),
                ScheduledUtil.getValueOrEmptyIfNull(finding.getAttribution().get("referenceUrl")),
                ScheduledUtil.getDateOrUnknownIfNull((Date) finding.getAttribution().get("attributedOn")),
                ScheduledUtil.getValueOrEmptyIfNull(finding.getAnalysis().get("state")),
                finding.getAnalysis().get("isSuppressed") instanceof Boolean
                        ? (Boolean) finding.getAnalysis().get("isSuppressed")
                        : false);
    }
}
